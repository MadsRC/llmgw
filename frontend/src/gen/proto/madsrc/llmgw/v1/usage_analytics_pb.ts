// SPDX-FileCopyrightText: 2025 Mads R. Havmand <mads@v42.dk>
//
// SPDX-License-Identifier: AGPL-3.0-only

// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file proto/madsrc/llmgw/v1/usage_analytics.proto (package llmgw.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * Core data structures
 *
 * @generated from message llmgw.v1.UsagePeriod
 */
export class UsagePeriod extends Message<UsagePeriod> {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  constructor(data?: PartialMessage<UsagePeriod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.UsagePeriod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start", kind: "message", T: Timestamp },
    { no: 2, name: "end", kind: "message", T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsagePeriod {
    return new UsagePeriod().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsagePeriod {
    return new UsagePeriod().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsagePeriod {
    return new UsagePeriod().fromJsonString(jsonString, options);
  }

  static equals(
    a: UsagePeriod | PlainMessage<UsagePeriod> | undefined,
    b: UsagePeriod | PlainMessage<UsagePeriod> | undefined,
  ): boolean {
    return proto3.util.equals(UsagePeriod, a, b);
  }
}

/**
 * @generated from message llmgw.v1.UsageSummary
 */
export class UsageSummary extends Message<UsageSummary> {
  /**
   * @generated from field: int32 total_requests = 1;
   */
  totalRequests = 0;

  /**
   * @generated from field: int64 total_input_tokens = 2;
   */
  totalInputTokens = protoInt64.zero;

  /**
   * @generated from field: int64 total_output_tokens = 3;
   */
  totalOutputTokens = protoInt64.zero;

  /**
   * @generated from field: int64 total_cost_cents = 4;
   */
  totalCostCents = protoInt64.zero;

  /**
   * @generated from field: repeated llmgw.v1.ModelUsage models = 5;
   */
  models: ModelUsage[] = [];

  constructor(data?: PartialMessage<UsageSummary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.UsageSummary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "total_requests",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
    },
    {
      no: 2,
      name: "total_input_tokens",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    {
      no: 3,
      name: "total_output_tokens",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    {
      no: 4,
      name: "total_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    { no: 5, name: "models", kind: "message", T: ModelUsage, repeated: true },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageSummary {
    return new UsageSummary().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageSummary {
    return new UsageSummary().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageSummary {
    return new UsageSummary().fromJsonString(jsonString, options);
  }

  static equals(
    a: UsageSummary | PlainMessage<UsageSummary> | undefined,
    b: UsageSummary | PlainMessage<UsageSummary> | undefined,
  ): boolean {
    return proto3.util.equals(UsageSummary, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelUsage
 */
export class ModelUsage extends Message<ModelUsage> {
  /**
   * @generated from field: string model_id = 1;
   */
  modelId = "";

  /**
   * @generated from field: int32 requests = 2;
   */
  requests = 0;

  /**
   * @generated from field: int64 input_tokens = 3;
   */
  inputTokens = protoInt64.zero;

  /**
   * @generated from field: int64 output_tokens = 4;
   */
  outputTokens = protoInt64.zero;

  /**
   * @generated from field: int64 cost_cents = 5;
   */
  costCents = protoInt64.zero;

  constructor(data?: PartialMessage<ModelUsage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelUsage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "requests", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    {
      no: 3,
      name: "input_tokens",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    {
      no: 4,
      name: "output_tokens",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    { no: 5, name: "cost_cents", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelUsage {
    return new ModelUsage().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelUsage {
    return new ModelUsage().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelUsage {
    return new ModelUsage().fromJsonString(jsonString, options);
  }

  static equals(
    a: ModelUsage | PlainMessage<ModelUsage> | undefined,
    b: ModelUsage | PlainMessage<ModelUsage> | undefined,
  ): boolean {
    return proto3.util.equals(ModelUsage, a, b);
  }
}

/**
 * @generated from message llmgw.v1.UsageEvent
 */
export class UsageEvent extends Message<UsageEvent> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string request_id = 2;
   */
  requestId = "";

  /**
   * @generated from field: string user_id = 3;
   */
  userId = "";

  /**
   * @generated from field: string model_id = 4;
   */
  modelId = "";

  /**
   * @generated from field: optional int32 input_tokens = 5;
   */
  inputTokens?: number;

  /**
   * @generated from field: optional int32 output_tokens = 6;
   */
  outputTokens?: number;

  /**
   * @generated from field: optional int32 cached_tokens = 7;
   */
  cachedTokens?: number;

  /**
   * @generated from field: optional int32 reasoning_tokens = 8;
   */
  reasoningTokens?: number;

  /**
   * @generated from field: string status = 9;
   */
  status = "";

  /**
   * @generated from field: optional string failure_stage = 10;
   */
  failureStage?: string;

  /**
   * @generated from field: optional string error_type = 11;
   */
  errorType?: string;

  /**
   * @generated from field: optional string error_message = 12;
   */
  errorMessage?: string;

  /**
   * @generated from field: string usage_data_source = 13;
   */
  usageDataSource = "";

  /**
   * @generated from field: bool data_complete = 14;
   */
  dataComplete = false;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 15;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: optional int32 duration_ms = 16;
   */
  durationMs?: number;

  /**
   * @generated from field: optional int64 input_cost_cents = 17;
   */
  inputCostCents?: bigint;

  /**
   * @generated from field: optional int64 output_cost_cents = 18;
   */
  outputCostCents?: bigint;

  /**
   * @generated from field: optional int64 total_cost_cents = 19;
   */
  totalCostCents?: bigint;

  constructor(data?: PartialMessage<UsageEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.UsageEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 5,
      name: "input_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
      opt: true,
    },
    {
      no: 6,
      name: "output_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
      opt: true,
    },
    {
      no: 7,
      name: "cached_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
      opt: true,
    },
    {
      no: 8,
      name: "reasoning_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
      opt: true,
    },
    { no: 9, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 10,
      name: "failure_stage",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    {
      no: 11,
      name: "error_type",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    {
      no: 12,
      name: "error_message",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    {
      no: 13,
      name: "usage_data_source",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 14,
      name: "data_complete",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    { no: 15, name: "timestamp", kind: "message", T: Timestamp },
    {
      no: 16,
      name: "duration_ms",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
      opt: true,
    },
    {
      no: 17,
      name: "input_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
      opt: true,
    },
    {
      no: 18,
      name: "output_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
      opt: true,
    },
    {
      no: 19,
      name: "total_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
      opt: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageEvent {
    return new UsageEvent().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageEvent {
    return new UsageEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageEvent {
    return new UsageEvent().fromJsonString(jsonString, options);
  }

  static equals(
    a: UsageEvent | PlainMessage<UsageEvent> | undefined,
    b: UsageEvent | PlainMessage<UsageEvent> | undefined,
  ): boolean {
    return proto3.util.equals(UsageEvent, a, b);
  }
}

/**
 * @generated from message llmgw.v1.UserUsageSummary
 */
export class UserUsageSummary extends Message<UserUsageSummary> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: string user_email = 2;
   */
  userEmail = "";

  /**
   * @generated from field: string user_name = 3;
   */
  userName = "";

  /**
   * @generated from field: llmgw.v1.UsageSummary summary = 4;
   */
  summary?: UsageSummary;

  constructor(data?: PartialMessage<UserUsageSummary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.UserUsageSummary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "summary", kind: "message", T: UsageSummary },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UserUsageSummary {
    return new UserUsageSummary().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UserUsageSummary {
    return new UserUsageSummary().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UserUsageSummary {
    return new UserUsageSummary().fromJsonString(jsonString, options);
  }

  static equals(
    a: UserUsageSummary | PlainMessage<UserUsageSummary> | undefined,
    b: UserUsageSummary | PlainMessage<UserUsageSummary> | undefined,
  ): boolean {
    return proto3.util.equals(UserUsageSummary, a, b);
  }
}

/**
 * Request/Response messages for GetUsageSummary
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageSummaryRequest
 */
export class UsageAnalyticsServiceGetUsageSummaryRequest extends Message<UsageAnalyticsServiceGetUsageSummaryRequest> {
  /**
   * "day", "week", "month"
   *
   * @generated from field: string period = 1;
   */
  period = "";

  /**
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * filter by specific model
   *
   * @generated from field: optional string model_id = 4;
   */
  modelId?: string;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageSummaryRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageSummaryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start", kind: "message", T: Timestamp },
    { no: 3, name: "end", kind: "message", T: Timestamp },
    {
      no: 4,
      name: "model_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryRequest {
    return new UsageAnalyticsServiceGetUsageSummaryRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryRequest {
    return new UsageAnalyticsServiceGetUsageSummaryRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryRequest {
    return new UsageAnalyticsServiceGetUsageSummaryRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageSummaryRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageSummaryRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageSummaryRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageSummaryRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetUsageSummaryRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageSummaryResponse
 */
export class UsageAnalyticsServiceGetUsageSummaryResponse extends Message<UsageAnalyticsServiceGetUsageSummaryResponse> {
  /**
   * @generated from field: llmgw.v1.UsagePeriod period = 1;
   */
  period?: UsagePeriod;

  /**
   * @generated from field: llmgw.v1.UsageSummary summary = 2;
   */
  summary?: UsageSummary;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageSummaryResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageSummaryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: UsagePeriod },
    { no: 2, name: "summary", kind: "message", T: UsageSummary },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryResponse {
    return new UsageAnalyticsServiceGetUsageSummaryResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryResponse {
    return new UsageAnalyticsServiceGetUsageSummaryResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageSummaryResponse {
    return new UsageAnalyticsServiceGetUsageSummaryResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageSummaryResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageSummaryResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageSummaryResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageSummaryResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetUsageSummaryResponse,
      a,
      b,
    );
  }
}

/**
 * Request/Response messages for GetUsageDetails
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageDetailsRequest
 */
export class UsageAnalyticsServiceGetUsageDetailsRequest extends Message<UsageAnalyticsServiceGetUsageDetailsRequest> {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  /**
   * filter by specific model
   *
   * @generated from field: optional string model_id = 3;
   */
  modelId?: string;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset = 5;
   */
  offset = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageDetailsRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start", kind: "message", T: Timestamp },
    { no: 2, name: "end", kind: "message", T: Timestamp },
    {
      no: 3,
      name: "model_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsRequest {
    return new UsageAnalyticsServiceGetUsageDetailsRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsRequest {
    return new UsageAnalyticsServiceGetUsageDetailsRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsRequest {
    return new UsageAnalyticsServiceGetUsageDetailsRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageDetailsRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageDetailsRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageDetailsRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageDetailsRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetUsageDetailsRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageDetailsResponse
 */
export class UsageAnalyticsServiceGetUsageDetailsResponse extends Message<UsageAnalyticsServiceGetUsageDetailsResponse> {
  /**
   * @generated from field: repeated llmgw.v1.UsageEvent events = 1;
   */
  events: UsageEvent[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageDetailsResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "events", kind: "message", T: UsageEvent, repeated: true },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsResponse {
    return new UsageAnalyticsServiceGetUsageDetailsResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsResponse {
    return new UsageAnalyticsServiceGetUsageDetailsResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageDetailsResponse {
    return new UsageAnalyticsServiceGetUsageDetailsResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageDetailsResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageDetailsResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageDetailsResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageDetailsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetUsageDetailsResponse,
      a,
      b,
    );
  }
}

/**
 * Request/Response messages for GetUsageCosts
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageCostsRequest
 */
export class UsageAnalyticsServiceGetUsageCostsRequest extends Message<UsageAnalyticsServiceGetUsageCostsRequest> {
  /**
   * "day", "week", "month"
   *
   * @generated from field: string period = 1;
   */
  period = "";

  /**
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * filter by specific model
   *
   * @generated from field: optional string model_id = 4;
   */
  modelId?: string;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageCostsRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageCostsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start", kind: "message", T: Timestamp },
    { no: 3, name: "end", kind: "message", T: Timestamp },
    {
      no: 4,
      name: "model_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsRequest {
    return new UsageAnalyticsServiceGetUsageCostsRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsRequest {
    return new UsageAnalyticsServiceGetUsageCostsRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsRequest {
    return new UsageAnalyticsServiceGetUsageCostsRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageCostsRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageCostsRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageCostsRequest
      | PlainMessage<UsageAnalyticsServiceGetUsageCostsRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(UsageAnalyticsServiceGetUsageCostsRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetUsageCostsResponse
 */
export class UsageAnalyticsServiceGetUsageCostsResponse extends Message<UsageAnalyticsServiceGetUsageCostsResponse> {
  /**
   * @generated from field: llmgw.v1.UsagePeriod period = 1;
   */
  period?: UsagePeriod;

  /**
   * @generated from field: repeated llmgw.v1.CostBreakdown cost_breakdown = 2;
   */
  costBreakdown: CostBreakdown[] = [];

  /**
   * @generated from field: int64 total_cost_cents = 3;
   */
  totalCostCents = protoInt64.zero;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetUsageCostsResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetUsageCostsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: UsagePeriod },
    {
      no: 2,
      name: "cost_breakdown",
      kind: "message",
      T: CostBreakdown,
      repeated: true,
    },
    {
      no: 3,
      name: "total_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsResponse {
    return new UsageAnalyticsServiceGetUsageCostsResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsResponse {
    return new UsageAnalyticsServiceGetUsageCostsResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetUsageCostsResponse {
    return new UsageAnalyticsServiceGetUsageCostsResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetUsageCostsResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageCostsResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetUsageCostsResponse
      | PlainMessage<UsageAnalyticsServiceGetUsageCostsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(UsageAnalyticsServiceGetUsageCostsResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.CostBreakdown
 */
export class CostBreakdown extends Message<CostBreakdown> {
  /**
   * @generated from field: string model_id = 1;
   */
  modelId = "";

  /**
   * @generated from field: int64 input_cost_cents = 2;
   */
  inputCostCents = protoInt64.zero;

  /**
   * @generated from field: int64 output_cost_cents = 3;
   */
  outputCostCents = protoInt64.zero;

  /**
   * @generated from field: int64 total_cost_cents = 4;
   */
  totalCostCents = protoInt64.zero;

  /**
   * @generated from field: int32 requests = 5;
   */
  requests = 0;

  constructor(data?: PartialMessage<CostBreakdown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.CostBreakdown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: "input_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    {
      no: 3,
      name: "output_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    {
      no: 4,
      name: "total_cost_cents",
      kind: "scalar",
      T: 3 /* ScalarType.INT64 */,
    },
    { no: 5, name: "requests", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): CostBreakdown {
    return new CostBreakdown().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): CostBreakdown {
    return new CostBreakdown().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): CostBreakdown {
    return new CostBreakdown().fromJsonString(jsonString, options);
  }

  static equals(
    a: CostBreakdown | PlainMessage<CostBreakdown> | undefined,
    b: CostBreakdown | PlainMessage<CostBreakdown> | undefined,
  ): boolean {
    return proto3.util.equals(CostBreakdown, a, b);
  }
}

/**
 * Request/Response messages for GetOrganizationUsageSummary
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageSummaryRequest
 */
export class UsageAnalyticsServiceGetOrganizationUsageSummaryRequest extends Message<UsageAnalyticsServiceGetOrganizationUsageSummaryRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * "day", "week", "month"
   *
   * @generated from field: string period = 2;
   */
  period = "";

  /**
   * @generated from field: google.protobuf.Timestamp start = 3;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 4;
   */
  end?: Timestamp;

  /**
   * filter by specific model
   *
   * @generated from field: optional string model_id = 5;
   */
  modelId?: string;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageSummaryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "organization_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: "period", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start", kind: "message", T: Timestamp },
    { no: 4, name: "end", kind: "message", T: Timestamp },
    {
      no: 5,
      name: "model_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageSummaryRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageSummaryRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageSummaryRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageSummaryResponse
 */
export class UsageAnalyticsServiceGetOrganizationUsageSummaryResponse extends Message<UsageAnalyticsServiceGetOrganizationUsageSummaryResponse> {
  /**
   * @generated from field: llmgw.v1.UsagePeriod period = 1;
   */
  period?: UsagePeriod;

  /**
   * @generated from field: llmgw.v1.UsageSummary summary = 2;
   */
  summary?: UsageSummary;

  /**
   * @generated from field: repeated llmgw.v1.UserUsageSummary user_summaries = 3;
   */
  userSummaries: UserUsageSummary[] = [];

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageSummaryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: UsagePeriod },
    { no: 2, name: "summary", kind: "message", T: UsageSummary },
    {
      no: 3,
      name: "user_summaries",
      kind: "message",
      T: UserUsageSummary,
      repeated: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageSummaryResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageSummaryResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageSummaryResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageSummaryResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageSummaryResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageSummaryResponse,
      a,
      b,
    );
  }
}

/**
 * Request/Response messages for GetOrganizationUsageByUser
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByUserRequest
 */
export class UsageAnalyticsServiceGetOrganizationUsageByUserRequest extends Message<UsageAnalyticsServiceGetOrganizationUsageByUserRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset = 5;
   */
  offset = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageByUserRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "organization_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: "start", kind: "message", T: Timestamp },
    { no: 3, name: "end", kind: "message", T: Timestamp },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageByUserRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByUserRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageByUserRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByUserRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageByUserRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByUserResponse
 */
export class UsageAnalyticsServiceGetOrganizationUsageByUserResponse extends Message<UsageAnalyticsServiceGetOrganizationUsageByUserResponse> {
  /**
   * @generated from field: repeated llmgw.v1.UserUsageSummary user_summaries = 1;
   */
  userSummaries: UserUsageSummary[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageByUserResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "user_summaries",
      kind: "message",
      T: UserUsageSummary,
      repeated: true,
    },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByUserResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByUserResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageByUserResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByUserResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageByUserResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByUserResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageByUserResponse,
      a,
      b,
    );
  }
}

/**
 * Request/Response messages for GetOrganizationUsageByModel
 *
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByModelRequest
 */
export class UsageAnalyticsServiceGetOrganizationUsageByModelRequest extends Message<UsageAnalyticsServiceGetOrganizationUsageByModelRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset = 5;
   */
  offset = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageByModelRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "organization_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: "start", kind: "message", T: Timestamp },
    { no: 3, name: "end", kind: "message", T: Timestamp },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelRequest {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageByModelRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByModelRequest>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageByModelRequest
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByModelRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageByModelRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByModelResponse
 */
export class UsageAnalyticsServiceGetOrganizationUsageByModelResponse extends Message<UsageAnalyticsServiceGetOrganizationUsageByModelResponse> {
  /**
   * @generated from field: repeated llmgw.v1.ModelUsage model_usage = 1;
   */
  modelUsage: ModelUsage[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  constructor(
    data?: PartialMessage<UsageAnalyticsServiceGetOrganizationUsageByModelResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.UsageAnalyticsServiceGetOrganizationUsageByModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "model_usage",
      kind: "message",
      T: ModelUsage,
      repeated: true,
    },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): UsageAnalyticsServiceGetOrganizationUsageByModelResponse {
    return new UsageAnalyticsServiceGetOrganizationUsageByModelResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | UsageAnalyticsServiceGetOrganizationUsageByModelResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByModelResponse>
      | undefined,
    b:
      | UsageAnalyticsServiceGetOrganizationUsageByModelResponse
      | PlainMessage<UsageAnalyticsServiceGetOrganizationUsageByModelResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      UsageAnalyticsServiceGetOrganizationUsageByModelResponse,
      a,
      b,
    );
  }
}
