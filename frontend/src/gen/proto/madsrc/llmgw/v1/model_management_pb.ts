// SPDX-FileCopyrightText: 2025 Mads R. Havmand <mads@v42.dk>
//
// SPDX-License-Identifier: AGPL-3.0-only

// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file proto/madsrc/llmgw/v1/model_management.proto (package llmgw.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * Core entity messages
 *
 * @generated from message llmgw.v1.Provider
 */
export class Provider extends Message<Provider> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string provider_type = 3;
   */
  providerType = "";

  /**
   * @generated from field: bool enabled = 4;
   */
  enabled = false;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Provider>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.Provider";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 3,
      name: "provider_type",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 4, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): Provider {
    return new Provider().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): Provider {
    return new Provider().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): Provider {
    return new Provider().fromJsonString(jsonString, options);
  }

  static equals(
    a: Provider | PlainMessage<Provider> | undefined,
    b: Provider | PlainMessage<Provider> | undefined,
  ): boolean {
    return proto3.util.equals(Provider, a, b);
  }
}

/**
 * @generated from message llmgw.v1.OpenRouterCredential
 */
export class OpenRouterCredential extends Message<OpenRouterCredential> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string api_key = 4;
   */
  apiKey = "";

  /**
   * @generated from field: string site_name = 5;
   */
  siteName = "";

  /**
   * @generated from field: string http_referer = 6;
   */
  httpReferer = "";

  /**
   * @generated from field: bool enabled = 7;
   */
  enabled = false;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 9;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<OpenRouterCredential>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.OpenRouterCredential";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 3,
      name: "description",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 4, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "site_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 6,
      name: "http_referer",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 7, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "created_at", kind: "message", T: Timestamp },
    { no: 9, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): OpenRouterCredential {
    return new OpenRouterCredential().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): OpenRouterCredential {
    return new OpenRouterCredential().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): OpenRouterCredential {
    return new OpenRouterCredential().fromJsonString(jsonString, options);
  }

  static equals(
    a: OpenRouterCredential | PlainMessage<OpenRouterCredential> | undefined,
    b: OpenRouterCredential | PlainMessage<OpenRouterCredential> | undefined,
  ): boolean {
    return proto3.util.equals(OpenRouterCredential, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelPricing
 */
export class ModelPricing extends Message<ModelPricing> {
  /**
   * @generated from field: double input_token_price = 1;
   */
  inputTokenPrice = 0;

  /**
   * @generated from field: double output_token_price = 2;
   */
  outputTokenPrice = 0;

  constructor(data?: PartialMessage<ModelPricing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelPricing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "input_token_price",
      kind: "scalar",
      T: 1 /* ScalarType.DOUBLE */,
    },
    {
      no: 2,
      name: "output_token_price",
      kind: "scalar",
      T: 1 /* ScalarType.DOUBLE */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelPricing {
    return new ModelPricing().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelPricing {
    return new ModelPricing().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelPricing {
    return new ModelPricing().fromJsonString(jsonString, options);
  }

  static equals(
    a: ModelPricing | PlainMessage<ModelPricing> | undefined,
    b: ModelPricing | PlainMessage<ModelPricing> | undefined,
  ): boolean {
    return proto3.util.equals(ModelPricing, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelCapabilities
 */
export class ModelCapabilities extends Message<ModelCapabilities> {
  /**
   * @generated from field: bool supports_streaming = 1;
   */
  supportsStreaming = false;

  /**
   * @generated from field: bool supports_json = 2;
   */
  supportsJson = false;

  /**
   * @generated from field: bool supports_tools = 3;
   */
  supportsTools = false;

  /**
   * @generated from field: bool supports_vision = 4;
   */
  supportsVision = false;

  /**
   * @generated from field: bool supports_reasoning = 5;
   */
  supportsReasoning = false;

  /**
   * @generated from field: int32 max_input_tokens = 6;
   */
  maxInputTokens = 0;

  /**
   * @generated from field: int32 max_output_tokens = 7;
   */
  maxOutputTokens = 0;

  constructor(data?: PartialMessage<ModelCapabilities>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelCapabilities";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "supports_streaming",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 2,
      name: "supports_json",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 3,
      name: "supports_tools",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 4,
      name: "supports_vision",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 5,
      name: "supports_reasoning",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 6,
      name: "max_input_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
    },
    {
      no: 7,
      name: "max_output_tokens",
      kind: "scalar",
      T: 5 /* ScalarType.INT32 */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelCapabilities {
    return new ModelCapabilities().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelCapabilities {
    return new ModelCapabilities().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelCapabilities {
    return new ModelCapabilities().fromJsonString(jsonString, options);
  }

  static equals(
    a: ModelCapabilities | PlainMessage<ModelCapabilities> | undefined,
    b: ModelCapabilities | PlainMessage<ModelCapabilities> | undefined,
  ): boolean {
    return proto3.util.equals(ModelCapabilities, a, b);
  }
}

/**
 * @generated from message llmgw.v1.Model
 */
export class Model extends Message<Model> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string provider_id = 3;
   */
  providerId = "";

  /**
   * @generated from field: string credential_id = 4;
   */
  credentialId = "";

  /**
   * @generated from field: string credential_type = 5;
   */
  credentialType = "";

  /**
   * @generated from field: llmgw.v1.ModelPricing pricing = 6;
   */
  pricing?: ModelPricing;

  /**
   * @generated from field: llmgw.v1.ModelCapabilities capabilities = 7;
   */
  capabilities?: ModelCapabilities;

  /**
   * Mirrors gai.Model.Metadata
   *
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string } = {};

  /**
   * @generated from field: bool enabled = 9;
   */
  enabled = false;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Model>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.Model";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    {
      no: 3,
      name: "provider_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: "credential_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 5,
      name: "credential_type",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    { no: 6, name: "pricing", kind: "message", T: ModelPricing },
    { no: 7, name: "capabilities", kind: "message", T: ModelCapabilities },
    {
      no: 8,
      name: "metadata",
      kind: "map",
      K: 9 /* ScalarType.STRING */,
      V: { kind: "scalar", T: 9 /* ScalarType.STRING */ },
    },
    { no: 9, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "created_at", kind: "message", T: Timestamp },
    { no: 11, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): Model {
    return new Model().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): Model {
    return new Model().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): Model {
    return new Model().fromJsonString(jsonString, options);
  }

  static equals(
    a: Model | PlainMessage<Model> | undefined,
    b: Model | PlainMessage<Model> | undefined,
  ): boolean {
    return proto3.util.equals(Model, a, b);
  }
}

/**
 * Provider service messages
 *
 * @generated from message llmgw.v1.ModelManagementServiceGetProviderRequest
 */
export class ModelManagementServiceGetProviderRequest extends Message<ModelManagementServiceGetProviderRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ModelManagementServiceGetProviderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceGetProviderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetProviderRequest {
    return new ModelManagementServiceGetProviderRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetProviderRequest {
    return new ModelManagementServiceGetProviderRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetProviderRequest {
    return new ModelManagementServiceGetProviderRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetProviderRequest
      | PlainMessage<ModelManagementServiceGetProviderRequest>
      | undefined,
    b:
      | ModelManagementServiceGetProviderRequest
      | PlainMessage<ModelManagementServiceGetProviderRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceGetProviderRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceGetProviderResponse
 */
export class ModelManagementServiceGetProviderResponse extends Message<ModelManagementServiceGetProviderResponse> {
  /**
   * @generated from field: llmgw.v1.Provider provider = 1;
   */
  provider?: Provider;

  constructor(
    data?: PartialMessage<ModelManagementServiceGetProviderResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceGetProviderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "message", T: Provider },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetProviderResponse {
    return new ModelManagementServiceGetProviderResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetProviderResponse {
    return new ModelManagementServiceGetProviderResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetProviderResponse {
    return new ModelManagementServiceGetProviderResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetProviderResponse
      | PlainMessage<ModelManagementServiceGetProviderResponse>
      | undefined,
    b:
      | ModelManagementServiceGetProviderResponse
      | PlainMessage<ModelManagementServiceGetProviderResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceGetProviderResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListProvidersRequest
 */
export class ModelManagementServiceListProvidersRequest extends Message<ModelManagementServiceListProvidersRequest> {
  /**
   * @generated from field: bool include_disabled = 1;
   */
  includeDisabled = false;

  constructor(
    data?: PartialMessage<ModelManagementServiceListProvidersRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceListProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "include_disabled",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListProvidersRequest {
    return new ModelManagementServiceListProvidersRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListProvidersRequest {
    return new ModelManagementServiceListProvidersRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListProvidersRequest {
    return new ModelManagementServiceListProvidersRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListProvidersRequest
      | PlainMessage<ModelManagementServiceListProvidersRequest>
      | undefined,
    b:
      | ModelManagementServiceListProvidersRequest
      | PlainMessage<ModelManagementServiceListProvidersRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceListProvidersRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListProvidersResponse
 */
export class ModelManagementServiceListProvidersResponse extends Message<ModelManagementServiceListProvidersResponse> {
  /**
   * @generated from field: repeated llmgw.v1.Provider providers = 1;
   */
  providers: Provider[] = [];

  constructor(
    data?: PartialMessage<ModelManagementServiceListProvidersResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceListProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "providers", kind: "message", T: Provider, repeated: true },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListProvidersResponse {
    return new ModelManagementServiceListProvidersResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListProvidersResponse {
    return new ModelManagementServiceListProvidersResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListProvidersResponse {
    return new ModelManagementServiceListProvidersResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListProvidersResponse
      | PlainMessage<ModelManagementServiceListProvidersResponse>
      | undefined,
    b:
      | ModelManagementServiceListProvidersResponse
      | PlainMessage<ModelManagementServiceListProvidersResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceListProvidersResponse,
      a,
      b,
    );
  }
}

/**
 * OpenRouter Credential service messages
 *
 * @generated from message llmgw.v1.ModelManagementServiceCreateOpenRouterCredentialRequest
 */
export class ModelManagementServiceCreateOpenRouterCredentialRequest extends Message<ModelManagementServiceCreateOpenRouterCredentialRequest> {
  /**
   * @generated from field: llmgw.v1.OpenRouterCredential credential = 1;
   */
  credential?: OpenRouterCredential;

  constructor(
    data?: PartialMessage<ModelManagementServiceCreateOpenRouterCredentialRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceCreateOpenRouterCredentialRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential", kind: "message", T: OpenRouterCredential },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialRequest {
    return new ModelManagementServiceCreateOpenRouterCredentialRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialRequest {
    return new ModelManagementServiceCreateOpenRouterCredentialRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialRequest {
    return new ModelManagementServiceCreateOpenRouterCredentialRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceCreateOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceCreateOpenRouterCredentialRequest>
      | undefined,
    b:
      | ModelManagementServiceCreateOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceCreateOpenRouterCredentialRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceCreateOpenRouterCredentialRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceCreateOpenRouterCredentialResponse
 */
export class ModelManagementServiceCreateOpenRouterCredentialResponse extends Message<ModelManagementServiceCreateOpenRouterCredentialResponse> {
  /**
   * @generated from field: llmgw.v1.OpenRouterCredential credential = 1;
   */
  credential?: OpenRouterCredential;

  constructor(
    data?: PartialMessage<ModelManagementServiceCreateOpenRouterCredentialResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceCreateOpenRouterCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential", kind: "message", T: OpenRouterCredential },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialResponse {
    return new ModelManagementServiceCreateOpenRouterCredentialResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialResponse {
    return new ModelManagementServiceCreateOpenRouterCredentialResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateOpenRouterCredentialResponse {
    return new ModelManagementServiceCreateOpenRouterCredentialResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceCreateOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceCreateOpenRouterCredentialResponse>
      | undefined,
    b:
      | ModelManagementServiceCreateOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceCreateOpenRouterCredentialResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceCreateOpenRouterCredentialResponse,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceGetOpenRouterCredentialRequest
 */
export class ModelManagementServiceGetOpenRouterCredentialRequest extends Message<ModelManagementServiceGetOpenRouterCredentialRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(
    data?: PartialMessage<ModelManagementServiceGetOpenRouterCredentialRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceGetOpenRouterCredentialRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialRequest {
    return new ModelManagementServiceGetOpenRouterCredentialRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialRequest {
    return new ModelManagementServiceGetOpenRouterCredentialRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialRequest {
    return new ModelManagementServiceGetOpenRouterCredentialRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceGetOpenRouterCredentialRequest>
      | undefined,
    b:
      | ModelManagementServiceGetOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceGetOpenRouterCredentialRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceGetOpenRouterCredentialRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceGetOpenRouterCredentialResponse
 */
export class ModelManagementServiceGetOpenRouterCredentialResponse extends Message<ModelManagementServiceGetOpenRouterCredentialResponse> {
  /**
   * @generated from field: llmgw.v1.OpenRouterCredential credential = 1;
   */
  credential?: OpenRouterCredential;

  constructor(
    data?: PartialMessage<ModelManagementServiceGetOpenRouterCredentialResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceGetOpenRouterCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential", kind: "message", T: OpenRouterCredential },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialResponse {
    return new ModelManagementServiceGetOpenRouterCredentialResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialResponse {
    return new ModelManagementServiceGetOpenRouterCredentialResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetOpenRouterCredentialResponse {
    return new ModelManagementServiceGetOpenRouterCredentialResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceGetOpenRouterCredentialResponse>
      | undefined,
    b:
      | ModelManagementServiceGetOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceGetOpenRouterCredentialResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceGetOpenRouterCredentialResponse,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListOpenRouterCredentialsRequest
 */
export class ModelManagementServiceListOpenRouterCredentialsRequest extends Message<ModelManagementServiceListOpenRouterCredentialsRequest> {
  /**
   * @generated from field: bool include_disabled = 1;
   */
  includeDisabled = false;

  constructor(
    data?: PartialMessage<ModelManagementServiceListOpenRouterCredentialsRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceListOpenRouterCredentialsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "include_disabled",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsRequest {
    return new ModelManagementServiceListOpenRouterCredentialsRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsRequest {
    return new ModelManagementServiceListOpenRouterCredentialsRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsRequest {
    return new ModelManagementServiceListOpenRouterCredentialsRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListOpenRouterCredentialsRequest
      | PlainMessage<ModelManagementServiceListOpenRouterCredentialsRequest>
      | undefined,
    b:
      | ModelManagementServiceListOpenRouterCredentialsRequest
      | PlainMessage<ModelManagementServiceListOpenRouterCredentialsRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceListOpenRouterCredentialsRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListOpenRouterCredentialsResponse
 */
export class ModelManagementServiceListOpenRouterCredentialsResponse extends Message<ModelManagementServiceListOpenRouterCredentialsResponse> {
  /**
   * @generated from field: repeated llmgw.v1.OpenRouterCredential credentials = 1;
   */
  credentials: OpenRouterCredential[] = [];

  constructor(
    data?: PartialMessage<ModelManagementServiceListOpenRouterCredentialsResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceListOpenRouterCredentialsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "credentials",
      kind: "message",
      T: OpenRouterCredential,
      repeated: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsResponse {
    return new ModelManagementServiceListOpenRouterCredentialsResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsResponse {
    return new ModelManagementServiceListOpenRouterCredentialsResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListOpenRouterCredentialsResponse {
    return new ModelManagementServiceListOpenRouterCredentialsResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListOpenRouterCredentialsResponse
      | PlainMessage<ModelManagementServiceListOpenRouterCredentialsResponse>
      | undefined,
    b:
      | ModelManagementServiceListOpenRouterCredentialsResponse
      | PlainMessage<ModelManagementServiceListOpenRouterCredentialsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceListOpenRouterCredentialsResponse,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceUpdateOpenRouterCredentialRequest
 */
export class ModelManagementServiceUpdateOpenRouterCredentialRequest extends Message<ModelManagementServiceUpdateOpenRouterCredentialRequest> {
  /**
   * @generated from field: llmgw.v1.OpenRouterCredential credential = 1;
   */
  credential?: OpenRouterCredential;

  /**
   * @generated from field: bool has_enabled = 2;
   */
  hasEnabled = false;

  constructor(
    data?: PartialMessage<ModelManagementServiceUpdateOpenRouterCredentialRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceUpdateOpenRouterCredentialRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential", kind: "message", T: OpenRouterCredential },
    { no: 2, name: "has_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialRequest {
    return new ModelManagementServiceUpdateOpenRouterCredentialRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialRequest {
    return new ModelManagementServiceUpdateOpenRouterCredentialRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialRequest {
    return new ModelManagementServiceUpdateOpenRouterCredentialRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceUpdateOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceUpdateOpenRouterCredentialRequest>
      | undefined,
    b:
      | ModelManagementServiceUpdateOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceUpdateOpenRouterCredentialRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceUpdateOpenRouterCredentialRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceUpdateOpenRouterCredentialResponse
 */
export class ModelManagementServiceUpdateOpenRouterCredentialResponse extends Message<ModelManagementServiceUpdateOpenRouterCredentialResponse> {
  /**
   * @generated from field: llmgw.v1.OpenRouterCredential credential = 1;
   */
  credential?: OpenRouterCredential;

  constructor(
    data?: PartialMessage<ModelManagementServiceUpdateOpenRouterCredentialResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceUpdateOpenRouterCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential", kind: "message", T: OpenRouterCredential },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialResponse {
    return new ModelManagementServiceUpdateOpenRouterCredentialResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialResponse {
    return new ModelManagementServiceUpdateOpenRouterCredentialResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateOpenRouterCredentialResponse {
    return new ModelManagementServiceUpdateOpenRouterCredentialResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceUpdateOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceUpdateOpenRouterCredentialResponse>
      | undefined,
    b:
      | ModelManagementServiceUpdateOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceUpdateOpenRouterCredentialResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceUpdateOpenRouterCredentialResponse,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceDeleteOpenRouterCredentialRequest
 */
export class ModelManagementServiceDeleteOpenRouterCredentialRequest extends Message<ModelManagementServiceDeleteOpenRouterCredentialRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(
    data?: PartialMessage<ModelManagementServiceDeleteOpenRouterCredentialRequest>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceDeleteOpenRouterCredentialRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialRequest {
    return new ModelManagementServiceDeleteOpenRouterCredentialRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialRequest {
    return new ModelManagementServiceDeleteOpenRouterCredentialRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialRequest {
    return new ModelManagementServiceDeleteOpenRouterCredentialRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceDeleteOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceDeleteOpenRouterCredentialRequest>
      | undefined,
    b:
      | ModelManagementServiceDeleteOpenRouterCredentialRequest
      | PlainMessage<ModelManagementServiceDeleteOpenRouterCredentialRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceDeleteOpenRouterCredentialRequest,
      a,
      b,
    );
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceDeleteOpenRouterCredentialResponse
 */
export class ModelManagementServiceDeleteOpenRouterCredentialResponse extends Message<ModelManagementServiceDeleteOpenRouterCredentialResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  constructor(
    data?: PartialMessage<ModelManagementServiceDeleteOpenRouterCredentialResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceDeleteOpenRouterCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialResponse {
    return new ModelManagementServiceDeleteOpenRouterCredentialResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialResponse {
    return new ModelManagementServiceDeleteOpenRouterCredentialResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteOpenRouterCredentialResponse {
    return new ModelManagementServiceDeleteOpenRouterCredentialResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceDeleteOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceDeleteOpenRouterCredentialResponse>
      | undefined,
    b:
      | ModelManagementServiceDeleteOpenRouterCredentialResponse
      | PlainMessage<ModelManagementServiceDeleteOpenRouterCredentialResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(
      ModelManagementServiceDeleteOpenRouterCredentialResponse,
      a,
      b,
    );
  }
}

/**
 * Model service messages
 *
 * @generated from message llmgw.v1.ModelManagementServiceCreateModelRequest
 */
export class ModelManagementServiceCreateModelRequest extends Message<ModelManagementServiceCreateModelRequest> {
  /**
   * @generated from field: llmgw.v1.Model model = 1;
   */
  model?: Model;

  constructor(data?: PartialMessage<ModelManagementServiceCreateModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceCreateModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceCreateModelRequest {
    return new ModelManagementServiceCreateModelRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateModelRequest {
    return new ModelManagementServiceCreateModelRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateModelRequest {
    return new ModelManagementServiceCreateModelRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceCreateModelRequest
      | PlainMessage<ModelManagementServiceCreateModelRequest>
      | undefined,
    b:
      | ModelManagementServiceCreateModelRequest
      | PlainMessage<ModelManagementServiceCreateModelRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceCreateModelRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceCreateModelResponse
 */
export class ModelManagementServiceCreateModelResponse extends Message<ModelManagementServiceCreateModelResponse> {
  /**
   * @generated from field: llmgw.v1.Model model = 1;
   */
  model?: Model;

  constructor(
    data?: PartialMessage<ModelManagementServiceCreateModelResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceCreateModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceCreateModelResponse {
    return new ModelManagementServiceCreateModelResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateModelResponse {
    return new ModelManagementServiceCreateModelResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceCreateModelResponse {
    return new ModelManagementServiceCreateModelResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceCreateModelResponse
      | PlainMessage<ModelManagementServiceCreateModelResponse>
      | undefined,
    b:
      | ModelManagementServiceCreateModelResponse
      | PlainMessage<ModelManagementServiceCreateModelResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceCreateModelResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceGetModelRequest
 */
export class ModelManagementServiceGetModelRequest extends Message<ModelManagementServiceGetModelRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ModelManagementServiceGetModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelManagementServiceGetModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetModelRequest {
    return new ModelManagementServiceGetModelRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetModelRequest {
    return new ModelManagementServiceGetModelRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetModelRequest {
    return new ModelManagementServiceGetModelRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetModelRequest
      | PlainMessage<ModelManagementServiceGetModelRequest>
      | undefined,
    b:
      | ModelManagementServiceGetModelRequest
      | PlainMessage<ModelManagementServiceGetModelRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceGetModelRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceGetModelResponse
 */
export class ModelManagementServiceGetModelResponse extends Message<ModelManagementServiceGetModelResponse> {
  /**
   * @generated from field: llmgw.v1.Model model = 1;
   */
  model?: Model;

  constructor(data?: PartialMessage<ModelManagementServiceGetModelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelManagementServiceGetModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceGetModelResponse {
    return new ModelManagementServiceGetModelResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetModelResponse {
    return new ModelManagementServiceGetModelResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceGetModelResponse {
    return new ModelManagementServiceGetModelResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceGetModelResponse
      | PlainMessage<ModelManagementServiceGetModelResponse>
      | undefined,
    b:
      | ModelManagementServiceGetModelResponse
      | PlainMessage<ModelManagementServiceGetModelResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceGetModelResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListModelsRequest
 */
export class ModelManagementServiceListModelsRequest extends Message<ModelManagementServiceListModelsRequest> {
  /**
   * @generated from field: bool include_disabled = 1;
   */
  includeDisabled = false;

  /**
   * @generated from field: string provider_id = 2;
   */
  providerId = "";

  /**
   * @generated from field: string credential_type = 3;
   */
  credentialType = "";

  constructor(data?: PartialMessage<ModelManagementServiceListModelsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llmgw.v1.ModelManagementServiceListModelsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: "include_disabled",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
    {
      no: 2,
      name: "provider_id",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 3,
      name: "credential_type",
      kind: "scalar",
      T: 9 /* ScalarType.STRING */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListModelsRequest {
    return new ModelManagementServiceListModelsRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListModelsRequest {
    return new ModelManagementServiceListModelsRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListModelsRequest {
    return new ModelManagementServiceListModelsRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListModelsRequest
      | PlainMessage<ModelManagementServiceListModelsRequest>
      | undefined,
    b:
      | ModelManagementServiceListModelsRequest
      | PlainMessage<ModelManagementServiceListModelsRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceListModelsRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceListModelsResponse
 */
export class ModelManagementServiceListModelsResponse extends Message<ModelManagementServiceListModelsResponse> {
  /**
   * @generated from field: repeated llmgw.v1.Model models = 1;
   */
  models: Model[] = [];

  constructor(data?: PartialMessage<ModelManagementServiceListModelsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceListModelsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "models", kind: "message", T: Model, repeated: true },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceListModelsResponse {
    return new ModelManagementServiceListModelsResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListModelsResponse {
    return new ModelManagementServiceListModelsResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceListModelsResponse {
    return new ModelManagementServiceListModelsResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceListModelsResponse
      | PlainMessage<ModelManagementServiceListModelsResponse>
      | undefined,
    b:
      | ModelManagementServiceListModelsResponse
      | PlainMessage<ModelManagementServiceListModelsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceListModelsResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceUpdateModelRequest
 */
export class ModelManagementServiceUpdateModelRequest extends Message<ModelManagementServiceUpdateModelRequest> {
  /**
   * @generated from field: llmgw.v1.Model model = 1;
   */
  model?: Model;

  /**
   * @generated from field: bool has_enabled = 2;
   */
  hasEnabled = false;

  /**
   * @generated from field: bool has_pricing = 3;
   */
  hasPricing = false;

  /**
   * @generated from field: bool has_capabilities = 4;
   */
  hasCapabilities = false;

  constructor(data?: PartialMessage<ModelManagementServiceUpdateModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceUpdateModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Model },
    { no: 2, name: "has_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "has_pricing", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    {
      no: 4,
      name: "has_capabilities",
      kind: "scalar",
      T: 8 /* ScalarType.BOOL */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceUpdateModelRequest {
    return new ModelManagementServiceUpdateModelRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateModelRequest {
    return new ModelManagementServiceUpdateModelRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateModelRequest {
    return new ModelManagementServiceUpdateModelRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceUpdateModelRequest
      | PlainMessage<ModelManagementServiceUpdateModelRequest>
      | undefined,
    b:
      | ModelManagementServiceUpdateModelRequest
      | PlainMessage<ModelManagementServiceUpdateModelRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceUpdateModelRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceUpdateModelResponse
 */
export class ModelManagementServiceUpdateModelResponse extends Message<ModelManagementServiceUpdateModelResponse> {
  /**
   * @generated from field: llmgw.v1.Model model = 1;
   */
  model?: Model;

  constructor(
    data?: PartialMessage<ModelManagementServiceUpdateModelResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceUpdateModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Model },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceUpdateModelResponse {
    return new ModelManagementServiceUpdateModelResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateModelResponse {
    return new ModelManagementServiceUpdateModelResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceUpdateModelResponse {
    return new ModelManagementServiceUpdateModelResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceUpdateModelResponse
      | PlainMessage<ModelManagementServiceUpdateModelResponse>
      | undefined,
    b:
      | ModelManagementServiceUpdateModelResponse
      | PlainMessage<ModelManagementServiceUpdateModelResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceUpdateModelResponse, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceDeleteModelRequest
 */
export class ModelManagementServiceDeleteModelRequest extends Message<ModelManagementServiceDeleteModelRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<ModelManagementServiceDeleteModelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceDeleteModelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceDeleteModelRequest {
    return new ModelManagementServiceDeleteModelRequest().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteModelRequest {
    return new ModelManagementServiceDeleteModelRequest().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteModelRequest {
    return new ModelManagementServiceDeleteModelRequest().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceDeleteModelRequest
      | PlainMessage<ModelManagementServiceDeleteModelRequest>
      | undefined,
    b:
      | ModelManagementServiceDeleteModelRequest
      | PlainMessage<ModelManagementServiceDeleteModelRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceDeleteModelRequest, a, b);
  }
}

/**
 * @generated from message llmgw.v1.ModelManagementServiceDeleteModelResponse
 */
export class ModelManagementServiceDeleteModelResponse extends Message<ModelManagementServiceDeleteModelResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  constructor(
    data?: PartialMessage<ModelManagementServiceDeleteModelResponse>,
  ) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    "llmgw.v1.ModelManagementServiceDeleteModelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ModelManagementServiceDeleteModelResponse {
    return new ModelManagementServiceDeleteModelResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteModelResponse {
    return new ModelManagementServiceDeleteModelResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ModelManagementServiceDeleteModelResponse {
    return new ModelManagementServiceDeleteModelResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | ModelManagementServiceDeleteModelResponse
      | PlainMessage<ModelManagementServiceDeleteModelResponse>
      | undefined,
    b:
      | ModelManagementServiceDeleteModelResponse
      | PlainMessage<ModelManagementServiceDeleteModelResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(ModelManagementServiceDeleteModelResponse, a, b);
  }
}
